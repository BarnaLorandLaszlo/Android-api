@page "/"
@using Demo.ApiClient1;
@using Demo.ApiClient1.Models.ApiModels;


<div class="card">
	<div class="card-body-p-0">
		<thead>
			<tr>
				<th>Code</th>
				<th>Name</th>
				<th>Price</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<input @bind="addProductModel.ProductCode" class="from-control" placeholder="Code"/>
				</td>
				<td>
					<input @bind="addProductModel.ProductName" class="from-control" placeholder="Name"/>
				</td>
				<td>
					<input @bind="addProductModel.Price" class="from-control" placeholder="Price" />
				</td>
				<td>
					<a @onclick="Addproduct" href="javascript:void(0)">Save</a>
				</td>
			</tr>
			   @if (products?.Any() ?? false)
                {
                    @foreach (var product in products)
                    {
                        <ProductRowItemComponent ProductRowItem="product"
                                                 OnEdit="EditProduct"
                                                 OnDelete="DeleteProduct" />
                    }
                }
                else
                {
                    <tr>
                        <td class="text-center" colspan="3">- No Products -</td>
                    </tr>
                }
		</tbody>
	</div>
</div>

@inject DemoApiClientService apiClient
@code{
	private List<Product>? products;
	private Product addProductModel = new();

	private async Task LoadProducts()
	{
		products = await apiClient.GetProducts();
	}
	private async Task Addproduct()
	{
		await apiClient.SaveProduct(addProductModel);
		await LoadProducts();
		addProductModel = new();
	}

	private async Task EditProduct(Product product)
	{
		await apiClient.UpdateProduct(product);
		await LoadProducts();
	}

	private async Task DeleteProduct(int id)
	{
		await apiClient.DeleteProduct(id);
		await LoadProducts();
	}




}